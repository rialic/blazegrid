version: "3.9"

networks:
  app:
  nginx:
  db:
  redis:

services:
  nginx:
    build:
      context: ./.docker/nginx
      dockerfile: Dockerfile
    image: nginx
    container_name: nginx
    volumes:
      - ./:/var/www:ro
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - app
    networks:
      - nginx

  app:
    user: "${UID}:${GID}"
    build:
      context: ./.docker/php-fpm
      dockerfile: Dockerfile
    image: app
    container_name: app
    working_dir: /var/www
    volumes:
      - ./:/var/www
    restart: unless-stopped
    depends_on:
      - db
      - redis
    networks:
      - app
      - nginx
      - db
      - redis

  db:
    image: mysql/mysql-server:latest
    container_name: db
    volumes:
      - ./.docker/mysql/:/var/lib/mysql
    ports:
      - "3306:3306"
    command:
        ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    environment:
      MYSQL_DATABASE: "${DB_DATABASE}"
      MYSQL_USER: "${DB_USERNAME}"
      MYSQL_PASSWORD: "${DB_PASSWORD}"
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 500M
    networks:
      - db

  redis:
    image: redis:7.0.4-alpine3.16
    container_name: redis
    command: redis-server --requirepass secret
    volumes:
      - ./.docker/redis/data:/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 100M
    networks:
      - redis

  #CONTAINER SERVICES

  node:
    image: node:current-alpine3.16
    container_name: node
    working_dir: /var/www
    volumes:
      - ./:/var/www

  composer:
    user: "${UID}:${GID}"
    build:
      context: ./.docker/composer
      dockerfile: Dockerfile
    image: composer
    container_name: composer
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["composer"]
    networks:
      - app

  artisan:
    user: "${UID}:${GID}"
    build:
      context: ./.docker/php-fpm
      dockerfile: Dockerfile
    image: artisan
    container_name: artisan
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["php", "artisan"]
    depends_on:
      - db
    networks:
      - app
      - db

  phpunit:
    user: "${UID}:${GID}"
    build:
      context: ./.docker/php-fpm
      dockerfile: Dockerfile
    image: phpunit
    container_name: phpunit
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["/var/www/vendor/bin/phpunit"]
    depends_on:
      - db
    networks:
      - app
      - db

  scheduler:
    user: "${UID}:${GID}"
    build:
      context: ./.docker/php-fpm
      dockerfile: Dockerfile
    image: scheduler
    container_name: scheduler
    working_dir: /var/www
    volumes:
      - ./:/var/www
    entrypoint: ["php", "artisan", "schedule:work"]
    networks:
      - app
      - nginx
      - db
      - redis